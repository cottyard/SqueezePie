
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3D6DD1DBF4886BCC6851EFAAB4A9B686'
    
_lr_action_items = {'FUNCTION':([0,2,7,8,9,10,11,13,17,18,21,22,27,28,29,30,31,32,33,34,35,36,38,58,61,63,64,65,69,70,74,75,76,],[-3,12,-8,12,-5,-6,-2,12,-9,-4,12,-13,12,12,12,12,-7,12,12,12,12,12,-14,12,-11,-10,-3,-12,-16,12,-15,-18,-17,]),'OP_DIVIDE':([3,4,14,16,19,23,24,26,37,42,45,46,47,48,49,50,51,52,53,60,66,75,],[-25,-27,-24,-28,30,30,-24,30,30,-26,30,30,30,-22,30,-21,30,30,30,-29,-34,-18,]),'RETURN':([0,2,7,9,10,11,17,18,22,31,38,61,63,64,65,69,70,74,75,76,],[-3,8,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,8,-15,-18,-17,]),'SEMICOLON':([3,4,8,14,16,19,23,24,42,46,48,49,50,51,52,53,60,66,75,],[-25,-27,22,-24,-28,31,38,-24,-26,61,-22,-20,-21,-23,-19,63,-29,-34,-18,]),'OP_MINUS':([3,4,14,16,19,23,24,26,37,42,45,46,47,48,49,50,51,52,53,60,66,75,],[-25,-27,-24,-28,32,32,-24,32,32,-26,32,32,32,-22,-20,-21,32,-19,32,-29,-34,-18,]),'OP_TIMES':([3,4,14,16,19,23,24,26,37,42,45,46,47,48,49,50,51,52,53,60,66,75,],[-25,-27,-24,-28,33,33,-24,33,33,-26,33,33,33,-22,33,-21,33,33,33,-29,-34,-18,]),'OP_GT':([3,4,14,16,19,23,24,26,37,42,45,46,47,48,49,50,51,52,53,60,66,75,],[-25,-27,-24,-28,34,34,-24,34,34,-26,34,34,34,-22,-20,-21,None,-19,34,-29,-34,-18,]),'NUMBER':([0,2,7,8,9,10,11,13,17,18,21,22,27,28,29,30,31,32,33,34,35,36,38,58,61,63,64,65,69,70,74,75,76,],[-3,3,-8,3,-5,-6,-2,3,-9,-4,3,-13,3,3,3,3,-7,3,3,3,3,3,-14,3,-11,-10,-3,-12,-16,3,-15,-18,-17,]),'ELSE':([69,75,],[73,-18,]),'OP_PLUS':([3,4,14,16,19,23,24,26,37,42,45,46,47,48,49,50,51,52,53,60,66,75,],[-25,-27,-24,-28,35,35,-24,35,35,-26,35,35,35,-22,-20,-21,35,-19,35,-29,-34,-18,]),'LBRACKET':([54,55,62,73,],[64,64,64,64,]),'OP_EQUAL':([14,20,],[28,36,]),'WHILE':([0,2,7,9,10,11,17,18,22,31,38,61,63,64,65,69,70,74,75,76,],[-3,6,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,6,-15,-18,-17,]),'COMMA':([3,4,16,24,40,41,42,43,45,48,49,50,51,52,60,66,67,68,75,],[-25,-27,-28,-24,56,-38,-26,58,-33,-22,-20,-21,-23,-19,-29,-34,56,58,-18,]),'LPAREN':([0,2,6,7,8,9,10,11,12,13,14,15,17,18,21,22,24,27,28,29,30,31,32,33,34,35,36,38,58,61,63,64,65,69,70,74,75,76,],[-3,13,21,-8,13,-5,-6,-2,25,13,27,29,-9,-4,13,-13,27,13,13,13,13,-7,13,13,13,13,13,-14,13,-11,-10,-3,-12,-16,13,-15,-18,-17,]),'VAR':([0,2,7,9,10,11,17,18,22,31,38,61,63,64,65,69,70,74,75,76,],[-3,5,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,5,-15,-18,-17,]),'RPAREN':([3,4,16,24,26,37,39,40,41,42,43,44,45,47,48,49,50,51,52,57,59,60,66,67,68,71,72,75,],[-25,-27,-28,-24,42,54,55,-37,-38,-26,-32,60,-33,62,-22,-20,-21,-23,-19,-35,-30,-29,-34,-37,-32,-36,-31,-18,]),'RBRACKET':([7,9,10,11,17,18,22,31,38,61,63,64,65,69,70,74,75,76,],[-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,75,-15,-18,-17,]),'IF':([0,2,7,9,10,11,17,18,22,31,38,61,63,64,65,69,70,74,75,76,],[-3,15,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,15,-15,-18,-17,]),'ID':([0,2,5,7,8,9,10,11,13,17,18,21,22,25,27,28,29,30,31,32,33,34,35,36,38,56,58,61,63,64,65,69,70,74,75,76,],[-3,14,20,-8,24,-5,-6,-2,24,-9,-4,24,-13,41,24,24,24,24,-7,24,24,24,24,24,-14,41,24,-11,-10,-3,-12,-16,14,-15,-18,-17,]),'$end':([0,1,2,7,9,10,11,17,18,22,31,38,61,63,65,69,74,75,76,],[-3,0,-1,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-12,-16,-15,-18,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function_decl':([2,8,13,21,27,28,29,30,32,33,34,35,36,58,70,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'statements':([0,64,],[2,70,]),'if_stmt':([2,70,],[17,17,]),'parameters':([25,],[39,]),'argument':([27,58,],[43,68,]),'parameter':([25,56,],[40,67,]),'else_clause':([69,],[74,]),'define_stmt':([2,70,],[9,9,]),'function_call':([2,8,13,21,27,28,29,30,32,33,34,35,36,58,70,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assign_stmt':([2,70,],[10,10,]),'while_stmt':([2,70,],[18,18,]),'program':([0,],[1,]),'return_stmt':([2,70,],[7,7,]),'arguments':([27,],[44,]),'statement':([2,70,],[11,11,]),'arguments_rest':([43,68,],[59,72,]),'expression':([2,8,13,21,27,28,29,30,32,33,34,35,36,58,70,],[19,23,26,37,45,46,47,48,49,50,51,52,53,45,19,]),'parameters_rest':([40,67,],[57,71,]),'compound_statements':([54,55,62,73,],[65,66,69,76,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',7),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',11),
  ('statements -> <empty>','statements',0,'p_statements_empty','parser.py',16),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',20),
  ('statement -> define_stmt','statement',1,'p_statement','parser.py',21),
  ('statement -> assign_stmt','statement',1,'p_statement','parser.py',22),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',23),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',24),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',25),
  ('define_stmt -> VAR ID OP_EQUAL expression SEMICOLON','define_stmt',5,'p_define','parser.py',30),
  ('assign_stmt -> ID OP_EQUAL expression SEMICOLON','assign_stmt',4,'p_assign','parser.py',34),
  ('while_stmt -> WHILE LPAREN expression RPAREN compound_statements','while_stmt',5,'p_while','parser.py',38),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_none','parser.py',42),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return','parser.py',46),
  ('if_stmt -> IF LPAREN expression RPAREN compound_statements else_clause','if_stmt',6,'p_if','parser.py',50),
  ('else_clause -> <empty>','else_clause',0,'p_else_empty','parser.py',54),
  ('else_clause -> ELSE compound_statements','else_clause',2,'p_else','parser.py',58),
  ('compound_statements -> LBRACKET statements RBRACKET','compound_statements',3,'p_compound_statements','parser.py',62),
  ('expression -> expression OP_PLUS expression','expression',3,'p_expression_bin_op','parser.py',66),
  ('expression -> expression OP_MINUS expression','expression',3,'p_expression_bin_op','parser.py',67),
  ('expression -> expression OP_TIMES expression','expression',3,'p_expression_bin_op','parser.py',68),
  ('expression -> expression OP_DIVIDE expression','expression',3,'p_expression_bin_op','parser.py',69),
  ('expression -> expression OP_GT expression','expression',3,'p_expression_bin_op','parser.py',70),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',75),
  ('expression -> NUMBER','expression',1,'p_term_factor','parser.py',79),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_expr','parser.py',83),
  ('expression -> function_call','expression',1,'p_expression_func_call','parser.py',87),
  ('expression -> function_decl','expression',1,'p_expression_func_call','parser.py',88),
  ('function_call -> ID LPAREN arguments RPAREN','function_call',4,'p_func_call','parser.py',93),
  ('arguments -> argument arguments_rest','arguments',2,'p_arguments','parser.py',97),
  ('arguments_rest -> COMMA argument arguments_rest','arguments_rest',3,'p_arguments_rest','parser.py',101),
  ('arguments_rest -> <empty>','arguments_rest',0,'p_arguments_rest_empty','parser.py',105),
  ('argument -> expression','argument',1,'p_argument','parser.py',109),
  ('function_decl -> FUNCTION LPAREN parameters RPAREN compound_statements','function_decl',5,'p_func_decl','parser.py',113),
  ('parameters -> parameter parameters_rest','parameters',2,'p_parameters','parser.py',117),
  ('parameters_rest -> COMMA parameter parameters_rest','parameters_rest',3,'p_parameters_rest','parser.py',121),
  ('parameters_rest -> <empty>','parameters_rest',0,'p_parameters_rest_empty','parser.py',125),
  ('parameter -> ID','parameter',1,'p_parameter','parser.py',129),
]
