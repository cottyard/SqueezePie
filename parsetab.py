
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '19CCDD52829991EF1A63F0774932E80B'
    
_lr_action_items = {'OP_LTEQ':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,29,-28,29,29,29,-30,29,29,None,-22,None,-20,None,-21,None,None,-19,29,29,-33,-39,-18,]),'RETURN':([0,2,6,8,9,10,17,18,23,32,42,66,71,72,73,76,78,81,83,84,],[-3,7,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,7,-15,-18,-17,]),'OP_MINUS':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,33,-28,33,33,33,-30,33,33,33,-22,33,-20,33,-21,33,33,-19,33,33,-33,-39,-18,]),'OP_GT':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,36,-28,36,36,36,-30,36,36,None,-22,None,-20,None,-21,None,None,-19,36,36,-33,-39,-18,]),'NUMBER':([0,2,6,7,8,9,10,13,17,18,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,66,68,71,72,73,76,78,81,83,84,],[-3,12,-8,12,-5,-6,-2,12,-9,-4,12,-13,12,12,12,12,12,-7,12,12,12,12,12,12,12,12,-14,-11,12,-10,-3,-12,-16,12,-15,-18,-17,]),'OP_PLUS':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,38,-28,38,38,38,-30,38,38,38,-22,38,-20,38,-21,38,38,-19,38,38,-33,-39,-18,]),'LBRACKET':([62,63,67,80,],[72,72,72,72,]),'OP_EQUAL':([14,20,],[27,40,]),'WHILE':([0,2,6,8,9,10,17,18,23,32,42,66,71,72,73,76,78,81,83,84,],[-3,5,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,5,-15,-18,-17,]),'OP_DIVIDE':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,30,-28,30,30,30,-30,30,30,30,-22,30,30,30,-21,30,30,30,30,30,-33,-39,-18,]),'RPAREN':([3,12,16,22,26,39,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,65,69,70,74,75,77,79,82,83,],[-31,-29,-32,-28,46,-34,62,63,-42,-43,-30,67,-26,-22,-27,-20,-24,-21,-23,-25,-19,-37,70,-38,-40,-35,-33,-39,-42,-37,-41,-36,-18,]),'SEMICOLON':([3,7,12,14,16,19,22,24,46,47,49,50,51,52,53,54,55,56,57,61,70,74,83,],[-31,23,-29,-28,-32,32,-28,42,-30,66,-26,-22,-27,-20,-24,-21,-23,-25,-19,71,-33,-39,-18,]),'OP_TIMES':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,35,-28,35,35,35,-30,35,35,35,-22,35,35,35,-21,35,35,35,35,35,-33,-39,-18,]),'COMMA':([3,12,16,22,44,45,46,49,50,51,52,53,54,55,56,57,58,60,70,74,75,77,83,],[-31,-29,-32,-28,64,-43,-30,-26,-22,-27,-20,-24,-21,-23,-25,-19,68,-38,-33,-39,64,68,-18,]),'$end':([0,1,2,6,8,9,10,17,18,23,32,42,66,71,73,76,81,83,84,],[-3,0,-1,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-12,-16,-15,-18,-17,]),'FUNCTION':([0,2,6,7,8,9,10,13,17,18,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,66,68,71,72,73,76,78,81,83,84,],[-3,11,-8,11,-5,-6,-2,11,-9,-4,11,-13,11,11,11,11,11,-7,11,11,11,11,11,11,11,11,-14,-11,11,-10,-3,-12,-16,11,-15,-18,-17,]),'OP_LT':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,37,-28,37,37,37,-30,37,37,None,-22,None,-20,None,-21,None,None,-19,37,37,-33,-39,-18,]),'LPAREN':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,60,61,66,68,70,71,72,73,74,76,78,81,83,84,],[-3,13,-31,21,-8,13,-5,-6,-2,25,-29,13,-28,28,-32,-9,-4,39,13,-28,-13,39,39,13,13,13,13,13,-7,13,13,13,13,13,13,13,13,39,-14,-30,39,39,39,39,39,39,39,39,39,39,39,39,39,-11,13,-33,-10,-3,-12,-39,-16,13,-15,-18,-17,]),'VAR':([0,2,6,8,9,10,17,18,23,32,42,66,71,72,73,76,78,81,83,84,],[-3,4,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,4,-15,-18,-17,]),'ELSE':([76,83,],[80,-18,]),'ID':([0,2,4,6,7,8,9,10,13,17,18,21,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,64,66,68,71,72,73,76,78,81,83,84,],[-3,14,20,-8,22,-5,-6,-2,22,-9,-4,22,-13,45,22,22,22,22,22,-7,22,22,22,22,22,22,22,22,-14,45,-11,22,-10,-3,-12,-16,14,-15,-18,-17,]),'IF':([0,2,6,8,9,10,17,18,23,32,42,66,71,72,73,76,78,81,83,84,],[-3,15,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,15,-15,-18,-17,]),'OP_EQ':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,31,-28,31,31,31,-30,31,31,None,-22,None,-20,None,-21,None,None,-19,31,31,-33,-39,-18,]),'OP_GTEQ':([3,12,14,16,19,22,24,26,41,46,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,83,],[-31,-29,-28,-32,34,-28,34,34,34,-30,34,34,None,-22,None,-20,None,-21,None,None,-19,34,34,-33,-39,-18,]),'RBRACKET':([6,8,9,10,17,18,23,32,42,66,71,72,73,76,78,81,83,84,],[-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,83,-15,-18,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function_decl':([2,7,13,21,27,28,29,30,31,33,34,35,36,37,38,39,40,68,78,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'statements':([0,72,],[2,78,]),'if_stmt':([2,78,],[17,17,]),'parameters':([25,],[43,]),'argument':([39,68,],[58,77,]),'parameter':([25,64,],[44,75,]),'else_clause':([76,],[81,]),'define_stmt':([2,78,],[8,8,]),'function_call':([2,7,13,21,27,28,29,30,31,33,34,35,36,37,38,39,40,68,78,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'assign_stmt':([2,78,],[9,9,]),'while_stmt':([2,78,],[18,18,]),'program':([0,],[1,]),'return_stmt':([2,78,],[6,6,]),'arguments':([39,],[59,]),'statement':([2,78,],[10,10,]),'arguments_rest':([58,77,],[69,82,]),'expression':([2,7,13,21,27,28,29,30,31,33,34,35,36,37,38,39,40,68,78,],[19,24,26,41,47,48,49,50,51,52,53,54,55,56,57,60,61,60,19,]),'parameters_rest':([44,75,],[65,79,]),'compound_statements':([62,63,67,80,],[73,74,76,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',7),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',11),
  ('statements -> <empty>','statements',0,'p_statements_empty','parser.py',16),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',20),
  ('statement -> define_stmt','statement',1,'p_statement','parser.py',21),
  ('statement -> assign_stmt','statement',1,'p_statement','parser.py',22),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',23),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',24),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',25),
  ('define_stmt -> VAR ID OP_EQUAL expression SEMICOLON','define_stmt',5,'p_define','parser.py',30),
  ('assign_stmt -> ID OP_EQUAL expression SEMICOLON','assign_stmt',4,'p_assign','parser.py',34),
  ('while_stmt -> WHILE LPAREN expression RPAREN compound_statements','while_stmt',5,'p_while','parser.py',38),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_none','parser.py',42),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return','parser.py',46),
  ('if_stmt -> IF LPAREN expression RPAREN compound_statements else_clause','if_stmt',6,'p_if','parser.py',50),
  ('else_clause -> <empty>','else_clause',0,'p_else_empty','parser.py',54),
  ('else_clause -> ELSE compound_statements','else_clause',2,'p_else','parser.py',58),
  ('compound_statements -> LBRACKET statements RBRACKET','compound_statements',3,'p_compound_statements','parser.py',62),
  ('expression -> expression OP_PLUS expression','expression',3,'p_expression_bin_op','parser.py',66),
  ('expression -> expression OP_MINUS expression','expression',3,'p_expression_bin_op','parser.py',67),
  ('expression -> expression OP_TIMES expression','expression',3,'p_expression_bin_op','parser.py',68),
  ('expression -> expression OP_DIVIDE expression','expression',3,'p_expression_bin_op','parser.py',69),
  ('expression -> expression OP_GT expression','expression',3,'p_expression_bin_op','parser.py',70),
  ('expression -> expression OP_GTEQ expression','expression',3,'p_expression_bin_op','parser.py',71),
  ('expression -> expression OP_LT expression','expression',3,'p_expression_bin_op','parser.py',72),
  ('expression -> expression OP_LTEQ expression','expression',3,'p_expression_bin_op','parser.py',73),
  ('expression -> expression OP_EQ expression','expression',3,'p_expression_bin_op','parser.py',74),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',79),
  ('expression -> NUMBER','expression',1,'p_term_factor','parser.py',83),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_expr','parser.py',87),
  ('expression -> function_call','expression',1,'p_expression_func_call','parser.py',91),
  ('expression -> function_decl','expression',1,'p_expression_func_call','parser.py',92),
  ('function_call -> expression LPAREN arguments RPAREN','function_call',4,'p_func_call','parser.py',97),
  ('arguments -> <empty>','arguments',0,'p_arguments_empty','parser.py',101),
  ('arguments -> argument arguments_rest','arguments',2,'p_arguments','parser.py',105),
  ('arguments_rest -> COMMA argument arguments_rest','arguments_rest',3,'p_arguments_rest','parser.py',109),
  ('arguments_rest -> <empty>','arguments_rest',0,'p_arguments_rest_empty','parser.py',113),
  ('argument -> expression','argument',1,'p_argument','parser.py',117),
  ('function_decl -> FUNCTION LPAREN parameters RPAREN compound_statements','function_decl',5,'p_func_decl','parser.py',121),
  ('parameters -> parameter parameters_rest','parameters',2,'p_parameters','parser.py',125),
  ('parameters_rest -> COMMA parameter parameters_rest','parameters_rest',3,'p_parameters_rest','parser.py',129),
  ('parameters_rest -> <empty>','parameters_rest',0,'p_parameters_rest_empty','parser.py',133),
  ('parameter -> ID','parameter',1,'p_parameter','parser.py',137),
]
