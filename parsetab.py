
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F5DDE2775FC77C57571CA27015C8114A'
    
_lr_action_items = {'OP_LTEQ':([3,12,14,16,19,23,24,26,40,45,48,49,50,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,-28,-27,-31,30,30,-27,30,30,-29,30,30,30,None,-22,-20,None,-21,None,None,-19,30,-32,-37,-18,]),'RETURN':([0,2,6,8,9,10,17,18,22,32,41,67,69,70,71,75,76,80,81,82,],[-3,7,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,7,-15,-18,-17,]),'OP_MINUS':([3,12,14,16,19,23,24,26,40,45,48,49,50,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,-28,-27,-31,33,33,-27,33,33,-29,33,33,33,33,-22,-20,33,-21,33,33,-19,33,-32,-37,-18,]),'OP_GT':([3,12,14,16,19,23,24,26,40,45,48,49,50,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,-28,-27,-31,36,36,-27,36,36,-29,36,36,36,None,-22,-20,None,-21,None,None,-19,36,-32,-37,-18,]),'NUMBER':([0,2,6,7,8,9,10,13,17,18,21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,41,64,67,69,70,71,75,76,80,81,82,],[-3,12,-8,12,-5,-6,-2,12,-9,-4,12,-13,12,12,12,12,12,-7,12,12,12,12,12,12,12,-14,12,-11,-10,-3,-12,-16,12,-15,-18,-17,]),'OP_PLUS':([3,12,14,16,19,23,24,26,40,45,48,49,50,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,-28,-27,-31,38,38,-27,38,38,-29,38,38,38,38,-22,-20,38,-21,38,38,-19,38,-32,-37,-18,]),'LBRACKET':([60,61,68,79,],[70,70,70,70,]),'VAR':([0,2,6,8,9,10,17,18,22,32,41,67,69,70,71,75,76,80,81,82,],[-3,4,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,4,-15,-18,-17,]),'WHILE':([0,2,6,8,9,10,17,18,22,32,41,67,69,70,71,75,76,80,81,82,],[-3,5,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,5,-15,-18,-17,]),'OP_DIVIDE':([3,12,14,16,19,23,24,26,40,45,48,49,50,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,-28,-27,-31,31,31,-27,31,31,-29,31,31,31,31,-22,31,31,-21,31,31,31,31,-32,-37,-18,]),'RPAREN':([3,12,16,24,26,40,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,63,65,66,72,73,74,77,78,81,],[-30,-28,-31,-27,45,60,61,-40,-41,-29,-35,66,-36,68,-26,-22,-20,-24,-21,-23,-25,-19,-38,-33,-32,-37,-40,-35,-39,-34,-18,]),'SEMICOLON':([3,7,12,14,16,19,23,24,45,49,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,22,-28,-27,-31,32,41,-27,-29,67,-26,-22,-20,-24,-21,-23,-25,-19,69,-32,-37,-18,]),'OP_TIMES':([3,12,14,16,19,23,24,26,40,45,48,49,50,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,-28,-27,-31,35,35,-27,35,35,-29,35,35,35,35,-22,35,35,-21,35,35,35,35,-32,-37,-18,]),'COMMA':([3,12,16,24,43,44,45,46,48,51,52,53,54,55,56,57,58,66,72,73,74,81,],[-30,-28,-31,-27,62,-41,-29,64,-36,-26,-22,-20,-24,-21,-23,-25,-19,-32,-37,62,64,-18,]),'$end':([0,1,2,6,8,9,10,17,18,22,32,41,67,69,71,75,80,81,82,],[-3,0,-1,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-12,-16,-15,-18,-17,]),'FUNCTION':([0,2,6,7,8,9,10,13,17,18,21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,41,64,67,69,70,71,75,76,80,81,82,],[-3,11,-8,11,-5,-6,-2,11,-9,-4,11,-13,11,11,11,11,11,-7,11,11,11,11,11,11,11,-14,11,-11,-10,-3,-12,-16,11,-15,-18,-17,]),'OP_LT':([3,12,14,16,19,23,24,26,40,45,48,49,50,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,-28,-27,-31,37,37,-27,37,37,-29,37,37,37,None,-22,-20,None,-21,None,None,-19,37,-32,-37,-18,]),'LPAREN':([0,2,5,6,7,8,9,10,11,13,14,15,17,18,21,22,24,27,28,29,30,31,32,33,34,35,36,37,38,39,41,64,67,69,70,71,75,76,80,81,82,],[-3,13,21,-8,13,-5,-6,-2,25,13,27,29,-9,-4,13,-13,27,13,13,13,13,13,-7,13,13,13,13,13,13,13,-14,13,-11,-10,-3,-12,-16,13,-15,-18,-17,]),'OP_EQUAL':([14,20,],[28,39,]),'ELSE':([75,81,],[79,-18,]),'ID':([0,2,4,6,7,8,9,10,13,17,18,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,62,64,67,69,70,71,75,76,80,81,82,],[-3,14,20,-8,24,-5,-6,-2,24,-9,-4,24,-13,44,24,24,24,24,24,-7,24,24,24,24,24,24,24,-14,44,24,-11,-10,-3,-12,-16,14,-15,-18,-17,]),'IF':([0,2,6,8,9,10,17,18,22,32,41,67,69,70,71,75,76,80,81,82,],[-3,15,-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,15,-15,-18,-17,]),'OP_GTEQ':([3,12,14,16,19,23,24,26,40,45,48,49,50,51,52,53,54,55,56,57,58,59,66,72,81,],[-30,-28,-27,-31,34,34,-27,34,34,-29,34,34,34,None,-22,-20,None,-21,None,None,-19,34,-32,-37,-18,]),'RBRACKET':([6,8,9,10,17,18,22,32,41,67,69,70,71,75,76,80,81,82,],[-8,-5,-6,-2,-9,-4,-13,-7,-14,-11,-10,-3,-12,-16,81,-15,-18,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function_decl':([2,7,13,21,27,28,29,30,31,33,34,35,36,37,38,39,64,76,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'statements':([0,70,],[2,76,]),'if_stmt':([2,76,],[17,17,]),'parameters':([25,],[42,]),'argument':([27,64,],[46,74,]),'parameter':([25,62,],[43,73,]),'else_clause':([75,],[80,]),'define_stmt':([2,76,],[8,8,]),'function_call':([2,7,13,21,27,28,29,30,31,33,34,35,36,37,38,39,64,76,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'assign_stmt':([2,76,],[9,9,]),'while_stmt':([2,76,],[18,18,]),'program':([0,],[1,]),'return_stmt':([2,76,],[6,6,]),'arguments':([27,],[47,]),'statement':([2,76,],[10,10,]),'arguments_rest':([46,74,],[65,78,]),'expression':([2,7,13,21,27,28,29,30,31,33,34,35,36,37,38,39,64,76,],[19,23,26,40,48,49,50,51,52,53,54,55,56,57,58,59,48,19,]),'parameters_rest':([43,73,],[63,77,]),'compound_statements':([60,61,68,79,],[71,72,75,82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',7),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',11),
  ('statements -> <empty>','statements',0,'p_statements_empty','parser.py',16),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',20),
  ('statement -> define_stmt','statement',1,'p_statement','parser.py',21),
  ('statement -> assign_stmt','statement',1,'p_statement','parser.py',22),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',23),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',24),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',25),
  ('define_stmt -> VAR ID OP_EQUAL expression SEMICOLON','define_stmt',5,'p_define','parser.py',30),
  ('assign_stmt -> ID OP_EQUAL expression SEMICOLON','assign_stmt',4,'p_assign','parser.py',34),
  ('while_stmt -> WHILE LPAREN expression RPAREN compound_statements','while_stmt',5,'p_while','parser.py',38),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_none','parser.py',42),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return','parser.py',46),
  ('if_stmt -> IF LPAREN expression RPAREN compound_statements else_clause','if_stmt',6,'p_if','parser.py',50),
  ('else_clause -> <empty>','else_clause',0,'p_else_empty','parser.py',54),
  ('else_clause -> ELSE compound_statements','else_clause',2,'p_else','parser.py',58),
  ('compound_statements -> LBRACKET statements RBRACKET','compound_statements',3,'p_compound_statements','parser.py',62),
  ('expression -> expression OP_PLUS expression','expression',3,'p_expression_bin_op','parser.py',66),
  ('expression -> expression OP_MINUS expression','expression',3,'p_expression_bin_op','parser.py',67),
  ('expression -> expression OP_TIMES expression','expression',3,'p_expression_bin_op','parser.py',68),
  ('expression -> expression OP_DIVIDE expression','expression',3,'p_expression_bin_op','parser.py',69),
  ('expression -> expression OP_GT expression','expression',3,'p_expression_bin_op','parser.py',70),
  ('expression -> expression OP_GTEQ expression','expression',3,'p_expression_bin_op','parser.py',71),
  ('expression -> expression OP_LT expression','expression',3,'p_expression_bin_op','parser.py',72),
  ('expression -> expression OP_LTEQ expression','expression',3,'p_expression_bin_op','parser.py',73),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',78),
  ('expression -> NUMBER','expression',1,'p_term_factor','parser.py',82),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_expr','parser.py',86),
  ('expression -> function_call','expression',1,'p_expression_func_call','parser.py',90),
  ('expression -> function_decl','expression',1,'p_expression_func_call','parser.py',91),
  ('function_call -> ID LPAREN arguments RPAREN','function_call',4,'p_func_call','parser.py',96),
  ('arguments -> argument arguments_rest','arguments',2,'p_arguments','parser.py',100),
  ('arguments_rest -> COMMA argument arguments_rest','arguments_rest',3,'p_arguments_rest','parser.py',104),
  ('arguments_rest -> <empty>','arguments_rest',0,'p_arguments_rest_empty','parser.py',108),
  ('argument -> expression','argument',1,'p_argument','parser.py',112),
  ('function_decl -> FUNCTION LPAREN parameters RPAREN compound_statements','function_decl',5,'p_func_decl','parser.py',116),
  ('parameters -> parameter parameters_rest','parameters',2,'p_parameters','parser.py',120),
  ('parameters_rest -> COMMA parameter parameters_rest','parameters_rest',3,'p_parameters_rest','parser.py',124),
  ('parameters_rest -> <empty>','parameters_rest',0,'p_parameters_rest_empty','parser.py',128),
  ('parameter -> ID','parameter',1,'p_parameter','parser.py',132),
]
